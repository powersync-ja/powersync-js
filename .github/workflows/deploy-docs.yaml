name: Deploy docs to GitHub Pages

on:
  push:
    branches: ['docs', 'main']

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    env:
      META_LOGO_URL: ${{vars.META_LOGO_URL}}
      ALGOLIA_APP_ID: ${{vars.ALGOLIA_APP_ID}}
      ALGOLIA_API_KEY: ${{vars.ALGOLIA_API_KEY}}
      ALGOLIA_INDEX_NAME: ${{vars.ALGOLIA_INDEX_NAME}}
      GH_URL: ${{vars.GH_URL}}
      GH_ORG: ${{vars.GH_ORG}}
      GH_PROJECT_NAME: ${{vars.GH_PROJECT_NAME}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build Packages
        run: pnpm build:packages
      - name: Build Docs
        run: pnpm docs:build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/build
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
